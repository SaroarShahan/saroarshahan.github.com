{"version":3,"sources":["components/SearchBar.jsx","components/VideoListItem.jsx","components/VideoList.jsx","components/VideoDetails.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","term","onInputChange","e","target","value","_this","setState","props","onTermChange","react_default","a","createElement","className","href","this","onChange","placeholder","Component","VideoListItem","_ref","video","onVideoSelect","imgUrl","snippet","thumbnails","default","url","src","alt","onClick","title","VideoList","VideoItem","videos","map","components_VideoListItem","key","etag","Fragment","VideoDetails","id","videoId","concat","description","Footer","rel","API_KEY","App","selectedVideo","onSearch","YTSearch","maxResults","console","log","onVideoChange","components_SearchBar","components_VideoDetails","components_VideoList","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44ffd157.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    term: \"\"\r\n  };\r\n\r\n  onInputChange = e => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onTermChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-dark py-3 mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-between\">\r\n            <div className=\"col-md-3\">\r\n              <a href=\"/\" className=\"navbar-brand text-warning\">\r\n                YouTube Searcher\r\n              </a>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={this.state.term}\r\n                onChange={this.onInputChange}\r\n                placeholder=\"Search here...\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst VideoListItem = ({ video, onVideoSelect }) => {\r\n  const imgUrl = video.snippet.thumbnails.default.url;\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body p-2 d-flex align-items-center\">\r\n        <div className=\"card__img\">\r\n          <img src={imgUrl} alt=\"\" />\r\n        </div>\r\n        <div className=\"card__content pl-3\">\r\n          <h1 className=\"heading-sm\">\r\n            <span\r\n              className=\"SelectPointer\"\r\n              onClick={() => onVideoSelect(video)}\r\n            >\r\n              {video.snippet.title}\r\n            </span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoListItem;\r\n","import React from \"react\";\r\nimport VideoListItem from \"./VideoListItem\";\r\n\r\nconst VideoList = props => {\r\n  const VideoItem = props.videos.map(video => {\r\n    return (\r\n      <VideoListItem\r\n        key={video.etag}\r\n        video={video}\r\n        onVideoSelect={props.onVideoSelect}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-md-4\">{VideoItem}</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n","import React from \"react\";\r\n\r\nconst VideoDetails = ({ video }) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const id = video.id.videoId;\r\n  const url = `https://www.youtube.com/embed/${id}`;\r\n  return (\r\n    <div className=\"col-md-8\">\r\n      <div className=\"card\">\r\n        <div className=\"embed-responsive embed-responsive-16by9\">\r\n          <iframe\r\n            className=\"embed-responsive-item\"\r\n            src={url}\r\n            title={video.snippet.id}\r\n          />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h4 className=\"heading-md border-bottom pb-2 mb-4\">\r\n            {video.snippet.title}\r\n          </h4>\r\n          <div>{video.snippet.description}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetails;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"bg-dark py-3\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <p className=\"copyright mb-0 text-white text-center\">\r\n              Made <span className=\"heart\">&hearts;</span> by\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https:www.facebook.com/SaroarShahan\"\r\n              >\r\n                Saroar Shahan\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport YTSearch from \"youtube-search-lib\";\nimport SearchBar from \"./components/SearchBar\";\nimport VideoList from \"./components/VideoList\";\nimport VideoDetails from \"./components/VideoDetails\";\nimport Footer from \"./components/Footer\";\n\nconst API_KEY = \"AIzaSyBa6SPdYEgnVliL6rB5FmoIS2263qB8aCw\";\n\nclass App extends Component {\n  state = {\n    videos: [],\n    selectedVideo: null\n  };\n\n  componentDidMount() {\n    this.onSearch(\"reactjs\");\n  }\n\n  onSearch = term => {\n    YTSearch({ key: API_KEY, term: term, maxResults: 5 }, videos =>\n      this.setState({ videos, selectedVideo: videos[0] })\n    );\n\n    console.log(this.state.videos);\n  };\n\n  onVideoChange = selectedVideo => {\n    this.setState({ selectedVideo });\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchBar onTermChange={this.onSearch} />\n        <div className=\"container\">\n          <div className=\"row\">\n            <VideoDetails video={this.state.selectedVideo} />\n            <VideoList\n              videos={this.state.videos}\n              onVideoSelect={this.onVideoChange}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}